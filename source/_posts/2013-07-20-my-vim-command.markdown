---
title: My Vim command
date: 2013-07-20 17:53:30
---

Mac 下配置vim:

配置文件位置    /usr/share/vim/vimrc

vimrc 下

	set ai ignorecase tabstop=2  //ai 设置自动缩进，ingorecase 无视大小写， tabstop tap缩进空格数
	set nu //显示行数


常用vim命令:

1. x 删除当前光标，也可以"40 x" 删除挡墙光标后40个字符
2. dd 删除一行

3. 查找替换
	- /pattern     向后搜索字符串pattern
	- ?pattern     向前搜索字符串pattern
	- n     下一个匹配(如果是/搜索，则是向下的下一个，?搜索则是向上的下一个)
	- N     上一个匹配(同上)

4. 复制粘贴
	- dd     删除光标所在行
	- dw     删除一个字(word)
	- x     删除当前字符
	- X     删除前一个字符
	- D     删除到行末
	- yy     复制一行，此命令前可跟数字，标识复制多行，如6yy，表示从当前行开始复制6行
	- yw     复制一个字
	- y$     复制到行末
	- p     粘贴粘贴板的内容到当前行的下面
	- P     粘贴粘贴板的内容到当前行的上面
	- ]p     有缩进的粘贴，vim会自动调节代码的缩进
	- "a     将内容放入/存入a寄存器，可以支持多粘贴板

5. 移动光标

	- h,j,k,l     上，下，左，右
	- ctrl-f     上翻一页
	- ctrl-b     下翻一页
	- %     跳到与当前括号匹配的括号处，如当前在{，则跳转到与之匹配的}处
	- w     跳到下一个字首，按标点或单词分割
	- W     跳到下一个字首，长跳，如end-of-line被认为是一个字
	- e     跳到下一个字尾
	- E     跳到下一个字尾，长跳
	- b     跳到上一个字
	- B     跳到上一个字，长跳
	- 0     跳至行首，不管有无缩进，就是跳到第0个字符
	- ^     跳至行首的第一个字符
	- $     跳至行尾
	- gg     跳至文件的第一行
	- gd     跳至当前光标所在的变量的声明处
	- [N]G     跳到第N行，如0G，就等价于gg，100G就是第100行
	- fx     在当前行中找x字符，找到了就跳转至
	- ;     重复上一个f命令，而不用重复的输入fx
	- tx     与fx类似，但是只是跳转到x的前一个字符处
	- Fx     跟fx的方向相反
	- ),(     跳转到上/下一个语句
	- `.     跳转至上次编辑位置
	- H     移动光标到当前屏幕上最上边的一行
	- M     移动光标到当前屏幕上中间的一行
	- L     移动光标到当前屏幕上最下边的一行

6. 编辑
	- r     替换一个字符
	- J     将下一行和当前行连接为一行
	- cc     删除当前行并进入编辑模式
	- cw     删除当前字，并进入编辑模式
	- c$     擦除从当前位置至行末的内容，并进入编辑模式
	- s     删除当前字符并进入编辑模式
	- S     删除光标所在行并进入编辑模式
	- xp     交换当前字符和下一个字符
	- u     撤销
	- ctrl+r     重做
	- .     重复上一个编辑命令
	- ~     切换大小写，当前字符
	- g~iw     切换当前字的大小写
	- gUiw     将当前字变成大写
	- guiw     将当前字变成小写
	- >>     将当前行右移一个单位
	- <<     将当前行左移一个单位(一个tab符)
	- ==     自动缩进当前行

插入模式
	- i     从当前光标处进入插入模式
	- I     进入插入模式，并置光标于行首
	- a     追加模式，置光标于当前光标之后
	- A     追加模式，置光标于行末
	- o     在当前行之下新加一行，并进入插入模式
	- O     在当前行之上新加一行，并进入插入模式
	- Esc     退出插入模式

现在对我比较有用的是:

1. o 当前行下，插入新行，进入编辑模式
2. ^ 到行头
3. $ 到行尾
4. a 在光标后进入编辑
5. r 替换当前字符
6. gg 到文件头
7. L 到最后一行
8. fx 跳转到行里的字符x处
